{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Krisi","text":"KRISI (/creesee/) <p>     Evaluation and Reporting Framework for Time Series Forecasting      Check Examples ~     Explore the docs \u00bb </p> <p></p> <p>Krisi is a Scoring library for Time-Series Forecasting. It calculates, stores and vizualises the performance of your predictions!</p> <p>Krisi is tailored to measure performance over time (metrics over time). It is from the ground-up extensible and lightweight and comes with fundamental metrics for regression, classification and residual diagnostics.</p> <p>It can generate reports in: - static PDF (with <code>plotly</code>) - interactive web (HTML) (with <code>plotly</code>) - pretty formatted for console (with <code>rich</code> and <code>plotext</code>) - each figure displayed or saved as an svg</p> <p></p> <p></p>"},{"location":"#krisi-solves-the-following-problems","title":"Krisi solves the following problems","text":"<ul> <li>Missing Rolling window based evaluation. \u2192 Krisi supports evaluating metrics over time.</li> <li>Most TS libraries attach reporting to modelling (eg.: Darts, Statsmodel). \u2192 Krisi is independent of any modeling method or library.</li> <li>Extendability is tedious: only works by subclassing objects. \u2192 Krisi supports easy configuration of custom metrics along with an extensive library of predefined metrics.</li> <li>Too many dependencies. \u2192 Krisi has few hard dependencies (only core libaries, eg.: sklearn and plotting libraries).</li> <li>Visualisation results are too basic. \u2192 With Krisi you can decide to share and interactive web, a static PDF, each metric diagram displayed inline or quickly look at the ScoreCard pretty printed to the console.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>The project was entirely built in <code>python</code>. </p> <p>Prerequisites</p> <ul> <li><code>python &gt;= 3.8</code> and <code>pip</code></li> </ul> <p>Then run:</p> <ul> <li><code>pip install krisi</code></li> </ul> <p>If you'd like to also use interactive plotting (html) and pdf generation then run:</p> <ul> <li><code>pip install krisi \"krisi[plotting]\"</code></li> </ul> <p></p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>You can quickly evaluate your predictions by running:</p> <pre><code>import numpy as np\nfrom krisi.evaluate import score\n\nprint(score(y=np.random.rand(100), predictions=np.random.rand(100)))\n</code></pre>  Outputs:  <pre><code>                                          Model_20230505-15094466243320 &lt;- you can add your name here\n                     Mean Absolute Error                       0.115402\n          Mean Absolute Percentage Error                       3.272862\nSymmetric Mean Absolute Percentage Error                       0.718754\n                      Mean Squared Error                       0.020945\n                 Root Mean Squared Error                       0.144723\n                               R-squared                      -1.108832\n                   Mean of the Residuals                      -0.002094\n     Standard Deviation of the Residuals                       0.144781\n</code></pre> <p>Krisi's main object is the <code>ScoreCard</code> that contains predefined <code>Metric</code>s and which you can add further <code>Metric</code>s to.</p> <pre><code>import numpy as np\nfrom krisi import score\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n).print()\n</code></pre>  Outputs:  <pre><code>\u250f\u2501 Result of Model_20230505-130632d68aefea on Dataset_20230505-130632d4167ca4 tested on outofsam\u2501\u2513\n\u2503                                                                                                \u2503\n\u2503                                Targets and Predictions Analysis                                \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502     Series Type \u2502 Histogram                                      \u2502      Types \u2502   Indicies \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502         Targets \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    NaNs: 0 \u2502   Start: 0 \u2502 \u2503\n\u2503 \u2502                 \u2502 75.0\u2524                   \u2588\u2588                   \u2502 \u2502     dtype: \u2502   End: 999 \u2502 \u2503\n\u2503 \u2502                 \u2502 50.0\u2524           \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588               \u2502 \u2502    float64 \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502 25.0\u2524    \u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        \u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  0.0\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502    -0.30     -0.14     0.02     0.18     0.34  \u2502            \u2502            \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502     Predictions \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    NaNs: 0 \u2502   Start: 0 \u2502 \u2503\n\u2503 \u2502                 \u2502 68.0\u2524                  \u2588 \u2588\u2588                  \u2502 \u2502     dtype: \u2502   End: 999 \u2502 \u2503\n\u2503 \u2502                 \u2502 45.3\u2524          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588               \u2502 \u2502    float64 \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502 22.7\u2524      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           \u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  0.0\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502    -0.29     -0.13     0.03     0.19     0.34  \u2502            \u2502            \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                      Residual Diagnostics                                      \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502         Metric Name \u2502 Result                                          \u2502 Parameters         \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502           Residuals \u2502 0      0.055378                                 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502         (residuals) \u2502 1     -0.077456                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 2     -0.102910                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 3     -0.088878                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 4     -0.137035                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502          ...                                    \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 995    0.153345                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 996    0.222105                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 997    0.022042                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 998    0.013997                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 999    0.068374                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 Length: 1000, dtype: float64                    \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502           Ljung Box \u2502       lb_stat  lb_pvalue                        \u2502 {}                 \u2502 \u2503\n\u2503 \u2502          Statistics \u2502 1    0.410131   0.521903                        \u2502                    \u2502 \u2503\n\u2503 \u2502 (ljung_box_statist\u2026 \u2502 2    0.411774   0.813925                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 3    0.541798   0.909617                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 4    4.200716   0.379523                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 5    4.217347   0.518566                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 6    5.934770   0.430537                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 7    9.905078   0.194017                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 8   10.020619   0.263582                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 9   11.102783   0.268729                        \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 10  11.268537   0.336983                        \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502         Mean of the \u2502 -0.002                                          \u2502 {}                 \u2502 \u2503\n\u2503 \u2502           Residuals \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u2502    (residuals_mean) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Standard Deviation \u2502 0.145                                           \u2502 {}                 \u2502 \u2503\n\u2503 \u2502    of the Residuals \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u2502     (residuals_std) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                  Forecast Errors - Regression                                  \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502 Mean Absolute Error \u2502 0.117                                           \u2502 {}                 \u2502 \u2503\n\u2503 \u2502               (mae) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502       Mean Absolute \u2502 7.322                                           \u2502 {}                 \u2502 \u2503\n\u2503 \u2502    Percentage Error \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u2502              (mape) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502      Symmetric Mean \u2502 0.727                                           \u2502 {}                 \u2502 \u2503\n\u2503 \u2502 Absolute Percentage \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u2502       Error (smape) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Mean Squared Error \u2502 0.021                                           \u2502 {'squared': True}  \u2502 \u2503\n\u2503 \u2502               (mse) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502 0.145                                           \u2502 {'squared': False} \u2502 \u2503\n\u2503 \u2502        Error (rmse) \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502 'Mean Squared Logarithmic Error cannot be used  \u2502 {'squared': False} \u2502 \u2503\n\u2503 \u2502   Log Error (rmsle) \u2502 when targets contain negative values.'          \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   R-squared (r_two) \u2502 -0.982                                          \u2502 {}                 \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                                                                \u2503\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n</code></pre> <p>Evaluating <code>Metric</code>s over time (on a rolling basis).  <pre><code>import numpy as np\nfrom krisi import score\n\nscore(\n    y=np.random.rand(10000),\n    predictions=np.random.rand(10000),\n    calculation=\"rolling\",\n).print()\n</code></pre></p>  Outputs:  <pre><code>\u250f\u2501 Result of Model_20230505-1303447c37e983 on Dataset_20230505-130344cea0de16 tested on outofsam\u2501\u2513\n\u2503                                                                                                \u2503\n\u2503                                Targets and Predictions Analysis                                \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502     Series Type \u2502 Histogram                                      \u2502      Types \u2502   Indicies \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502         Targets \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    NaNs: 0 \u2502   Start: 0 \u2502 \u2503\n\u2503 \u2502                 \u2502 14.0\u2524             \u2588\u2588                         \u2502 \u2502     dtype: \u2502   End: 249 \u2502 \u2503\n\u2503 \u2502                 \u2502 11.7\u2524             \u2588\u2588     \u2588                   \u2502 \u2502    float64 \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  9.3\u2524     \u2588\u2588\u2588\u2588    \u2588\u2588     \u2588 \u2588\u2588 \u2588\u2588             \u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  7.0\u2524\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588 \u2588\u2588 \u2588\u2588\u2588\u2588  \u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  4.7\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  2.3\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  0.0\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502    -0.00     0.25      0.50     0.75     1.00  \u2502            \u2502            \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502     Predictions \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    NaNs: 0 \u2502   Start: 0 \u2502 \u2503\n\u2503 \u2502                 \u2502 11.0\u2524        \u2588\u2588                              \u2502 \u2502     dtype: \u2502   End: 249 \u2502 \u2503\n\u2503 \u2502                 \u2502  9.2\u2524        \u2588\u2588\u2588 \u2588\u2588    \u2588 \u2588                 \u2588\u2588\u2502 \u2502    float64 \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  7.3\u2524   \u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588 \u2588   \u2588\u2588   \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  5.5\u2524  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  3.7\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  1.8\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502  0.0\u2524\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502            \u2502            \u2502 \u2503\n\u2503 \u2502                 \u2502    -0.01     0.25      0.50     0.76     1.01  \u2502            \u2502            \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                      Residual Diagnostics                                      \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502         Metric Name \u2502 Result                                          \u2502 Parameters         \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502           Residuals \u2502 0     -0.224918                                 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502         (residuals) \u2502 1      0.250975                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 2      0.206893                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 3      0.632068                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 4      0.467366                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502          ...                                    \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 245    0.336682                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 246    0.132184                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 247   -0.339346                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 248    0.422431                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 249   -0.424224                                 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 Length: 250, dtype: float64                     \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502           Ljung Box \u2502 'zero-size array to reduction operation maximum \u2502 {}                 \u2502 \u2503\n\u2503 \u2502          Statistics \u2502 which has no identity'                          \u2502                    \u2502 \u2503\n\u2503 \u2502 (ljung_box_statist\u2026 \u2502                                                 \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502         Mean of the \u2502      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502           Residuals \u2502  0.73\u2524     \u2590                               \u2597  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502    (residuals_mean) \u2502  0.51\u2524\u2590\u2597\u258c  \u2590     \u2596    \u2597\u258c       \u2597      \u2596    \u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  0.28\u2524\u2590\u2590\u258c\u2597\u258c\u259f\u2597\u259f\u259a\u2597\u2590\u259a\u2584\u258c\u2597\u2590\u2590\u2599\u2597\u259e\u259f \u2584\u258c \u2588 \u2597 \u259f\u2597\u259f\u258c\u258c\u2599 \u2584\u259c \u2596\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  0.05\u2524\u2588\u2590\u2599\u2590\u2599\u2588\u259f\u2590\u259d\u2588\u258c \u2588\u258c\u259f\u259c\u259f\u259b\u2588\u258c\u2588\u259f\u2588\u2599\u258c\u2588\u258c\u2588\u2590\u2590\u2590\u258c\u259c\u2588\u2588\u2590\u2590\u2590\u258c\u2599\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 -0.18\u2524\u2588\u2590\u2588\u258c\u2588\u2588\u2588\u2590 \u259c\u258c \u259d\u259c\u259c \u2588\u2598\u2588\u258c\u2588\u259c\u259d\u2588\u2599\u259b\u2588\u2588\u2588 \u2598\u258c\u2590\u2588\u259c\u2590\u2590\u2590\u2590\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 -0.41\u2524 \u2598 \u2598\u2588\u259c\u259c\u259d \u2590\u258c     \u258c \u258c\u2598\u259d  \u2588\u259c\u258c\u259c\u258c\u2588  \u258c\u259d\u259b\u259d\u2588\u2590\u2590 \u2598\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 -0.63\u2524    \u259c     \u2598     \u258c \u2598    \u259d \u2598 \u2598\u259d  \u258c   \u259d\u259d\u2590  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502       1        32        63       94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Standard Deviation \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502    of the Residuals \u2502 0.70\u2524      \u2596\u258c               \u2596    \u2596            \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502     (residuals_std) \u2502 0.58\u2524 \u2597    \u258c\u258c \u2597\u258c \u2596    \u2596     \u2588  \u2596 \u258c  \u259f  \u2597\u2597     \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.47\u2524 \u2590\u2597   \u258c\u258c\u2597\u2588\u258c \u258c   \u2590\u258c \u2597  \u2596\u2588 \u2590\u2599 \u258c \u2596\u2588  \u2590\u2590     \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.35\u2524 \u2590\u2590\u2597  \u258c\u258c\u259e\u2588\u2599\u2597\u258c \u2597\u259a\u2590\u258c \u2590\u2597\u2596\u258c\u2588 \u259f\u2590 \u258c\u2590\u258c\u2588 \u2597\u2590\u2590\u258c\u2596\u2597\u258c\u259e\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.23\u2524 \u259f\u2590\u2588\u258c\u2596\u258c\u2599\u258c\u2588\u2588\u258c\u2599\u2596\u2590\u2590\u259f\u258c \u259f\u2588\u258c\u258c\u2588\u259f\u2588\u259d\u259f\u258c\u2590\u2590\u259c\u2599\u259c\u259b\u258c\u259c\u258c\u2590\u258c\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.12\u2524\u2590\u2590\u259f\u2588\u259c\u259a\u258c\u258c\u258c\u259b\u259b\u258c\u259c\u2590\u2590\u259d\u259b\u258c\u259f\u2588\u2588\u259a\u2599\u259b\u2588\u258c \u2580\u258c\u2588\u2590\u2590\u259c\u2590\u258c  \u2580\u2588\u258c\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.00\u2524\u259f \u2598\u2580  \u259d\u258c\u2598\u2598\u258c\u2598  \u2598  \u2590\u259c\u259d\u2598 \u2598 \u259d   \u259d \u2590\u259d  \u2598   \u259c\u259d\u2598\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      1        32        63        94       125  \u2502                    \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                  Forecast Errors - Regression                                  \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502 Mean Absolute Error \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502               (mae) \u2502 0.73\u2524     \u2597\u258c\u2596               \u2596                 \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.61\u2524\u2597   \u259f\u2590\u258c\u258c \u2597\u258c     \u2597 \u2597    \u259b\u2596   \u258c\u2596 \u2597\u258c \u2597\u2597 \u2597\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.49\u2524\u2590\u2590\u2596 \u2588\u2590\u258c\u258c \u259f\u258c \u258c   \u2590\u259c\u2590\u2597  \u2596\u258c\u258c\u259e\u258c\u2590\u2588\u258c \u2588\u258c\u2584\u2590\u2590\u259f\u2588\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.38\u2524\u2590\u259f\u2588\u2584\u2588\u2590\u2590\u2599\u259f\u2588\u259a\u2599\u258c\u2597 \u2584\u2590\u2590\u2590\u2590 \u2596\u258c\u258c\u258c\u258c\u259c\u2588\u2588\u2599\u258c\u2588\u2588\u2588\u2590\u2590\u2588\u259b\u259b\u2596\u259e\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.26\u2524\u259f\u259d\u259c\u2590\u259c\u258c\u2590\u258c\u2598\u2588\u2590\u258c\u259a\u2588\u2590\u259d\u2580\u2590\u2590\u259e\u259c\u258c\u2599\u258c\u2588\u258c\u259d\u2588\u2588\u259c\u2590\u259c\u2590\u259c\u2580\u2580\u259c\u258c \u2588\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.14\u2524   \u2590 \u2598 \u2598 \u2588 \u2598 \u259c\u2590  \u2590\u2588 \u2590\u2588\u259d\u258c\u2588\u2598  \u2590 \u2590\u2590\u2590    \u2598 \u2588 \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.02\u2524   \u259d     \u258c    \u2580  \u259d\u259c  \u259d  \u259d   \u259d  \u259d         \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      1        32        63        94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502       Mean Absolute \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502    Percentage Error \u2502 38.2\u2524                        \u2597\u258c               \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502              (mape) \u2502 31.8\u2524                        \u2590\u258c               \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 25.5\u2524    \u259f\u259f                  \u2590\u258c               \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 19.1\u2524    \u2588\u2588  \u2596               \u2590\u258c               \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 12.7\u2524    \u2588\u2588 \u2590\u258c \u258c             \u2590\u258c               \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  6.4\u2524   \u2597\u2588\u2588 \u2590\u258c \u258c     \u2597 \u2597     \u2590\u258c   \u2596  \u2596        \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  0.0\u2524\u2584\u259f\u2584\u2580\u259b\u259b\u259e\u2588\u2599\u2584\u2599\u2584\u2584\u2584\u2584\u2584\u259f\u259a\u259f\u259f\u259f\u2584\u259a\u2599\u2588\u259b\u2584\u2599\u2588\u259a\u259f\u259f\u259a\u259f\u2584\u259f\u259c\u259e\u259e\u2584\u259e\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      1        32        63        94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502      Symmetric Mean \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502 Absolute Percentage \u2502 0.90\u2524    \u259f\u2597\u258c                                  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502       Error (smape) \u2502 0.75\u2524    \u2588\u2590\u258c\u258c  \u2596       \u2590 \u259f       \u2597\u258c     \u2597     \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.60\u2524\u2597\u2590  \u2588\u258c\u258c\u258c\u2584\u2597\u258c\u2596    \u2597\u2597\u2590\u2597\u2588  \u2588  \u2596 \u2588\u258c\u259f\u259f\u2584  \u2590  \u2599 \u2597\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.46\u2524\u2590\u2590\u2599\u259c\u2588\u258c\u2590\u2588\u259b\u259f\u258c\u258c\u2596  \u259f\u2590\u259c\u2590\u2590\u2588 \u258c\u259b\u2584\u2588\u258c\u258c\u2588\u258c\u2588\u2588\u2588\u2599\u2590\u2590\u2590\u259f\u259b\u2596\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.31\u2524\u2590\u259c\u2588\u259d\u2588\u258c \u2580 \u2588\u259a\u2599\u2599\u2597\u2590\u259d\u2598\u2590\u2590\u258c\u2590\u2588\u258c\u258c\u2588\u258c\u259d\u2588\u2588\u2588\u2590\u2588\u2588\u259c\u2590\u259e\u2588\u258c\u2598\u259b\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.16\u2524\u259f \u259d \u258c\u2598   \u259b \u2598\u2580\u259b\u259f  \u2590\u2588\u258c\u2590\u2588\u259d\u258c\u2588\u258c \u259d\u259c\u259c\u2590\u2590\u259d \u2598\u2598\u259c\u258c \u2598 \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.02\u2524         \u258c       \u259d\u259d  \u259d  \u259d   \u259d  \u259d         \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      1        32        63        94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Mean Squared Error \u2502      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {'squared': True}  \u2502 \u2503\n\u2503 \u2502               (mse) \u2502 0.548\u2524     \u2590\u2597\u258c                                \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.457\u2524     \u2590\u259f\u258c              \u2597\u258c   \u259f   \u258c     \u2597  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.366\u2524    \u259f\u2590\u2588\u258c \u259f      \u2599 \u2596   \u2590\u259a \u259f \u2588  \u2590\u258c  \u2584\u2584\u2597\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.274\u2524\u2590\u2590\u2596 \u2588\u2590\u2588\u258c\u2597\u258c\u258c\u2597\u258c   \u259b\u2596\u258c \u2597 \u2590\u2590\u2584\u259c \u2588\u259f\u2597\u2590\u258c\u2599\u2588\u2588\u2588\u2590\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.183\u2524\u2590\u259f\u2599 \u2588\u2590\u259c\u258c\u2590\u258c\u258c\u2588\u258c\u2596\u2590 \u258c\u258c\u258c\u258c\u259f\u2590\u2590\u2590\u2588 \u2599\u2588\u2588\u2588\u2590\u258c\u2588\u2588\u2588\u2588\u2590\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.092\u2524\u2590\u259d\u258c\u2588\u2588\u259e\u2590\u259d\u2588\u258c\u2588\u259d\u2588\u258c\u2590\u259c\u258c\u258c\u2599\u2588\u2588\u2590\u259f\u2590\u2588 \u259b\u2588\u2588\u2588\u2590\u2599\u2588\u258c\u2580\u259d\u259e\u2598\u2599\u259b\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.000\u2524\u2580  \u259c \u2598\u259d \u259d\u258c\u259d \u2598\u2590\u259e  \u259b\u258c \u2580\u259e\u259d\u259d\u259b  \u259d\u258c\u259d\u259b\u259b\u258c     \u2588 \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502       1        32        63       94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {'squared': False} \u2502 \u2503\n\u2503 \u2502        Error (rmse) \u2502 0.74\u2524     \u2597\u258c\u258c               \u2584    \u2596   \u2596        \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.62\u2524\u2597   \u259f\u2590\u258c\u258c \u2597\u258c \u2596   \u2590\u2596\u2597    \u259b\u2596 \u258c \u258c\u2596 \u259f\u258c\u2584\u2597\u2597\u2584\u2597\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.50\u2524\u2590\u2590\u2596 \u2588\u2590\u258c\u258c \u259f\u258c\u2597\u258c  \u2596\u2590\u2590\u2590\u2597 \u2596\u2596\u258c\u258c\u259e\u259a\u2590\u2588\u2599\u258c\u2588\u2588\u2588\u2590\u2590\u2588\u2588\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.38\u2524\u2590\u2580\u2588\u2584\u2588\u259e\u2590\u259b\u259e\u2588\u259a\u259b\u258c\u259f\u2590\u259a\u259f\u2590\u2590\u2590\u259f\u258c\u258c\u258c\u2588\u258c\u2590\u2588\u2588\u2588\u258c\u2588\u2588\u2588\u259e\u259f\u259c\u259b\u259b\u2596\u259e\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.26\u2524\u259f \u259c\u2590\u2580\u258c\u2590\u258c\u2598\u2588\u259d\u258c\u259a\u259c\u2590\u259d\u259d\u2590\u2590\u2580\u259c\u258c\u2599\u258c\u2588\u258c\u259d\u2588\u2588\u259d\u2590\u259c\u2590\u259c\u2598 \u259d\u258c \u2588\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.14\u2524   \u2590   \u2598 \u259b   \u2590\u2590  \u2590\u2588 \u2590\u2588 \u2598\u2588   \u2590 \u2590\u2590\u2590      \u2588 \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.02\u2524   \u259d     \u258c    \u2580  \u259d\u259c  \u259d  \u259d      \u259d         \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      1        32        63        94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {'squared': False} \u2502 \u2503\n\u2503 \u2502   Log Error (rmsle) \u2502 0.533\u2524     \u2590 \u2596                                \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.447\u2524    \u259f\u2590\u259f\u258c \u2597      \u2596 \u2596   \u2590\u258c \u2597 \u259f\u2597 \u2597\u258c  \u2597  \u259f  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.361\u2524\u2590\u2590\u2596 \u2588\u2590\u2588\u258c \u258c\u258c \u2596   \u259b\u2596\u258c\u2596  \u2590\u2590\u258c\u2588 \u2588\u2588\u259f\u2590\u258c\u2599\u2599\u2588\u2588\u2590\u2588  \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.275\u2524\u2590\u259f\u2599\u2596\u2588\u259e\u2590\u259c\u259f\u258c\u2599\u2588\u258c\u2596\u2590\u2596\u258c\u258c\u258c\u2599\u2588\u2590\u2590\u2590\u2588 \u2599\u2588\u2588\u2588\u2590\u258c\u2588\u2588\u2588\u2588\u2590\u259b\u2596\u2597\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.189\u2524\u2590 \u258c\u2588\u2588\u258c\u2590 \u259c\u258c\u259c\u259d\u2588\u258c\u2590\u259c\u2598\u258c\u2599\u2580\u2588\u2590\u259f\u2590\u2588 \u259b\u2588\u2588\u2588\u2590\u2599\u2588\u258c\u2598\u259c\u259e \u2599\u258c\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.102\u2524\u2580  \u2588 \u2598\u259d \u2590\u258c   \u2590\u259e  \u2588\u258c \u2588\u258c\u259c\u2590\u259b  \u2590\u258c\u259d\u2588\u258c\u2598     \u259b \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 0.016\u2524   \u259d    \u259d\u258c   \u259d\u2598  \u2580\u258c  \u2598  \u2598   \u2598  \u2598        \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502      \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502       1        32        63       94       125  \u2502                    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   R-squared (r_two) \u2502           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 {}                 \u2502 \u2503\n\u2503 \u2502                     \u2502        1.0\u2524\u259d\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u259c\u259b\u2580\u2580\u2580\u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  -242903.5\u2524                              \u2590\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  -485808.0\u2524                              \u2590\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  -728712.5\u2524                              \u2590\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502  -971617.0\u2524                              \u2590\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 -1214521.4\u2524                              \u2590\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502 -1457425.9\u2524                              \u259d\u258c   \u2502 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502           \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502                    \u2502 \u2503\n\u2503 \u2502                     \u2502            1       32      63       94     125  \u2502                    \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                                                                \u2503\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n</code></pre> <p>You can also show the results in a Report easily:</p> <pre><code>import numpy as np\nfrom krisi import score\n\nscore(\n    y=np.random.rand(10000),\n    predictions=np.random.rand(10000),\n    calculation=\"rolling\",\n).generate_report('pdf')\n</code></pre> <p>Generates:</p> <p></p>"},{"location":"#default-metrics","title":"Default Metrics","text":"<p>See <code>evaluate/library</code> for source. Contributors are continously adding new default metrics, press watch to keep track of the project and see in issues planned default metrics.</p> <p> Residual Diagnostics  - Mean of the Residuals - Standard Deviation of the Residuals - Ljung Box Statistics - (wip) Autocorrelation of Residuals</p> <p> Regression Errors - Mean Absolute Error - Mean Absolute Percentage Error - Symmetric Mean Absolute Percentage Error - Mean Squared Error - Root Mean Squared Error - Root Mean Squared Log Error - R-squared</p> <p> Classification Errors - Matthew Correlation Coefficient - F1 Score - Precision - Recall - Accuracy</p>"},{"location":"#examples-walkthroughs-and-blog-posts","title":"Examples, Walkthroughs and Blog Posts","text":"Name Type Dataset Type Docs Link Colab        \u26a1\ufe0f Core Walkthrough      Walkthrough Synthetic Notebook Colab       \ud83d\ude84 Collapsed Metrics vs Metrics over Time      Walkthrough Energy -           Colab                \ud83d\udcda Example Collection      Example Synthetic          Collection Link           -"},{"location":"#our-open-core-time-series-toolkit","title":"Our Open-core Time Series Toolkit","text":"<p>If you want to try them out, we'd love to hear about your use case and help, please book a free 30-min call with us!</p>"},{"location":"#advanced-usage","title":"Advanced usage","text":"<p>Creating <code>Metric</code>s with metadata.</p> <pre><code>import numpy as np\nfrom krisi.evaluate import Metric, MetricCategories, ScoreCard\n\n# Random targets and predictions for Demo\ntarget, predictions = np.random.rand(100), np.random.rand(100)\n\n# Create ScoreCard\nsc = ScoreCard(target, predictions)\n\n# Calculate a random metric for Demo\ncalculated_metric_example = (target - predictions).mean()\n\n# Adding a simple new metric (a float)\n# As a Dictionary:\nsc[\"metric_barebones\"] = calculated_metric_example\n\n# As an Object assignment:\nsc.another_metric_barebones = calculated_metric_example * 2.0\n\nsc[\"metric_with_metadata\"] = Metric(\n    name=\"A new, own Metric\",\n    category=MetricCategories.residual,\n    result=calculated_metric_example * 3.0,\n    parameters={\"hyper_1\": 5.0},\n)\n\n# Updating the metadata of an existing metric\nsc.metric_barebones = dict(info=\"Giving description to a metric\")\n\n# Print a pretty summary to the console\nsc.print(with_info=True)\n</code></pre>  Outputs:  <pre><code>\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 Result of &lt;your_model_name&gt; on &lt;your_dataset_name&gt; tested on insample \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503                                                                                                                                 \u2503\n\u2503                                                      Residual Diagnostics                                                       \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502         Metric Name \u2502 Result                                         \u2502 Parameters         \u2502 Info                            \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502         Mean of the \u2502 0.035                                          \u2502 {}                 \u2502 ''                              \u2502 \u2503\n\u2503 \u2502           Residuals \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u2502    (residuals_mean) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Standard Deviation \u2502 0.42                                           \u2502 {}                 \u2502 ''                              \u2502 \u2503\n\u2503 \u2502    of the Residuals \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u2502     (residuals_std) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   A new, own Metric \u2502 0.105                                          \u2502 {'hyper_1': 5.0}   \u2502 'Giving description to a        \u2502 \u2503\n\u2503 \u2502 (yet_another_metri\u2026 \u2502                                                \u2502                    \u2502 metric'                         \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                  Forecast Errors - Regression                                                   \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502 Mean Absolute Error \u2502 0.35                                           \u2502 {}                 \u2502 '(Mean absolute error)          \u2502 \u2503\n\u2503 \u2502               (mae) \u2502                                                \u2502                    \u2502 represents the difference       \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 between the original and        \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 predicted values extracted by   \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 averaged the absolute           \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 difference over the data set.'  \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502       Mean Absolute \u2502 2.543                                          \u2502 {}                 \u2502 ''                              \u2502 \u2503\n\u2503 \u2502    Percentage Error \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u2502              (mape) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502  Mean Squared Error \u2502 0.178                                          \u2502 {'squared': True}  \u2502 '(Mean Squared Error)           \u2502 \u2503\n\u2503 \u2502               (mse) \u2502                                                \u2502                    \u2502 represents the difference       \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 between the original and        \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 predicted values extracted by   \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 squared the average difference  \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 over the data set.'             \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502 0.421                                          \u2502 {'squared': False} \u2502 '(Root Mean Squared Error) is   \u2502 \u2503\n\u2503 \u2502        Error (rmse) \u2502                                                \u2502                    \u2502 the error rate by the square    \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 root of Mean Squared Error.'    \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared \u2502 0.29                                           \u2502 {'squared': False} \u2502 ''                              \u2502 \u2503\n\u2503 \u2502   Log Error (rmsle) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502      R-squared (r2) \u2502 -1.28                                          \u2502 {}                 \u2502 '(Coefficient of determination) \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 represents the coefficient of   \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 how well the values fit         \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 compared to the original        \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 values. The value from 0 to 1   \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 interpreted as percentages. The \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 higher the value is, the better \u2502 \u2503\n\u2503 \u2502                     \u2502                                                \u2502                    \u2502 the model is.'                  \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                                 Unknown                                                         \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502          own_metric \u2502 0.035                                          \u2502 {}                 \u2502 ''                              \u2502 \u2503\n\u2503 \u2502        (own_metric) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502      another_metric \u2502 0.07                                           \u2502 {}                 \u2502 ''                              \u2502 \u2503\n\u2503 \u2502    (another_metric) \u2502                                                \u2502                    \u2502                                 \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                                                                                                 \u2503\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n</code></pre>"},{"location":"#contribution","title":"Contribution","text":"<p>Join our Discord for live discussion!</p> <p>Submit an issue or reach out to us on info at dream-faster.ai for any inquiries.</p>"},{"location":"api/","title":"API","text":"<p>This is the reference guide for <code>krisi</code>.</p> <p>The main modules of krisi are the following:</p> Module Description Evaluate Contains the main training and backtesting loop Report Naive and Baseline model classes"},{"location":"api/dataset/","title":"Detaset helpers","text":""},{"location":"api/dataset/#krisi.analyse.dataset","title":"krisi.analyse.dataset","text":""},{"location":"api/dataset/#krisi.analyse.dataset.check_consistency","title":"check_consistency","text":"<pre><code>check_consistency(df: pd.DataFrame, title: str = '', time_delta: pd.Timedelta = pd.Timedelta('00:60:00'))\n</code></pre> <p>Prints a summary on:</p> <ul> <li>the number of NaNs</li> <li>the frequency of the dataset</li> <li>if there are irregular gaps within the indexes.</li> </ul> <p>Parameters:</p> Name Type Description Default <code>df</code> <code>DataFrame</code> <p>DataFrame that we would like to check the inconsistency of.</p> required <code>title</code> <code>str</code> <p>Title of the report</p> <code>''</code> <code>time_delta</code> <code>Timedelta</code> <p>The size of gaps within indexes, to check irregular indexes.</p> <code>Timedelta('00:60:00')</code>"},{"location":"api/evaluate/","title":"Evaluate","text":""},{"location":"api/evaluate/#krisi.evaluate.compare","title":"krisi.evaluate.compare","text":""},{"location":"api/evaluate/#krisi.evaluate.compare.compare","title":"compare","text":"<pre><code>compare(scorecards: List[ScoreCard], metric_keys: Optional[List[str]] = None, sort_by: Optional[str] = None, dataframe: bool = True) -&gt; Union[pd.DataFrame, str]\n</code></pre> <p>Creates a table where each column is a metric and each row is a scorecard and its corresponding results.</p> <p>Parameters:</p> Name Type Description Default <code>scorecards</code> <code>List[ScoreCard]</code> <p>ScoreCards to compare.</p> required <code>metric_keys</code> <code>Optional[List[str]]</code> <p>List of metrics to display. If not set it will return all evaluated metrics on the first scorecard. Sorts the results by the first element of this list if <code>sort_by</code> is not specified., by default None</p> <code>None</code> <code>sort_by</code> <code>Optional[str]</code> <p><code>Metric</code> to sort results by. Selected <code>Metric</code> will be displayed in the first row. If not specified metrics will be sorted by the first element of <code>metric_keys</code>. If <code>metric_keys</code> is not specified it will default to the first metric found on the first <code>ScoreCard</code>, by default None</p> <code>None</code> <code>dataframe</code> <code>bool</code> <p>Whether it should return a <code>pd.DataFrame</code> or a <code>str</code>, by default True</p> <code>True</code> <p>Returns:</p> Type Description <code>Union[DataFrame, str]</code> <p>A comparison table, either in <code>pd.DataFrame</code> or <code>string</code> format.</p>"},{"location":"api/evaluate/#krisi.evaluate.score","title":"krisi.evaluate.score","text":""},{"location":"api/evaluate/#krisi.evaluate.score.score","title":"score","text":"<pre><code>score(y: Targets, predictions: Predictions, probabilities: Optional[Probabilities] = None, sample_weight: Optional[Weights] = None, model_name: Optional[str] = None, dataset_name: Optional[str] = None, project_name: Optional[str] = None, default_metrics: Optional[Union[List[Metric], Metric]] = None, custom_metrics: Optional[Union[List[Metric], Metric]] = None, dataset_type: Optional[Union[DatasetType, str]] = None, sample_type: Union[str, SampleTypes] = SampleTypes.outofsample, calculation: Union[Calculation, str] = Calculation.single, rolling_args: Optional[Dict[str, Any]] = None, raise_exceptions: bool = False, benchmark_models: Optional[Union[Model, List[Model]]] = None, num_benchmark_iter: int = 100, **kwargs) -&gt; ScoreCard\n</code></pre> <p>Creates a ScoreCard based on the passed in arguments, evaluates and then returns the ScoreCard.</p> <p>Parameters:</p> Name Type Description Default <code>y</code> <code>Targets</code> <p>True Targets to which the metrics are evaluated to.</p> required <code>predictions</code> <code>Predictions</code> <p>The single point predictions to which the metrics are evaluated to.</p> required <code>model_name</code> <code>Optional[str]</code> <p>The name of the model that the predictions were generated by. Used for identifying scorecards.</p> <code>None</code> <code>dataset_name</code> <code>Optional[str]</code> <p>The name of the dataset from which the <code>y</code> (targets) orginate from. Used for reporting.</p> <code>None</code> <code>project_name</code> <code>Optional[str]</code> <p>The name of the project. Used for reporting and saving to a directory (eg.: multiple scorecards)</p> <code>None</code> <code>default_metrics</code> <code>Optional[Union[List[Metric], Metric]]</code> <p>Default metrics that get evaluated. See <code>library</code>.</p> <code>None</code> <code>custom_metrics</code> <code>Optional[Union[List[Metric], Metric]]</code> <p>Custom metrics that get evaluated. If specified it will evaluate these after <code>default_metric</code> See <code>library</code>.</p> <code>None</code> <code>dataset_type</code> <code>Optional[Union[DatasetType, str]]</code> <p>Whether the task was a binar/multi-label classifiction of regression. If set to <code>None</code> it will infer from the target.</p> <code>None</code> <code>sample_type</code> <code>Union[str, SampleTypes]</code> <p>Whether we should evaluate it on insample or out of sample.</p> <pre><code>- `SampleTypes.outofsample`\n- `SampleTypes.insample`\n</code></pre> <code>outofsample</code> <code>calculation</code> <code>Union[Calculation, str]</code> <p>Whether it should evaluate <code>Metrics</code> on a rolling basis or on the whole prediction or both, by default Calculation.single</p> <pre><code>- `Calculation.single`\n- `Calculation.rolling`\n- `Calculation.both`\n</code></pre> <code>single</code> <code>rolling_args</code> <code>Dict[str, Any]</code> <p>Arguments to be passed onto <code>pd.DataFrame.rolling</code>. Default:</p> <ul> <li>The window size of the rolling metric evaluation. If <code>None</code> evaluation over time will be on expanding window basis, by default <code>len(dataset)//100</code>.</li> <li>The step size of the rolling metric evaluation, by default <code>len(dataset)//100</code>.</li> </ul> <code>None</code> <p>Returns:</p> Type Description <code>ScoreCard</code> <p>The ScoreCard Evaluated</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If Calculation type is incorrectly specified.</p>"},{"location":"api/scorecard/","title":"Scorecard & Metric","text":""},{"location":"api/scorecard/#krisi.evaluate.scorecard","title":"krisi.evaluate.scorecard","text":""},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard","title":"ScoreCard","text":"<p>ScoreCard Object.</p> <p>Krisi's main object holding and evaluating metrics. Stores, evaluates and generates vizualisations of predefined and custom metrics for regression and classification.</p> <p>Parameters:</p> Name Type Description Default <code>y</code> <code>Targets</code> <p>True Targets to which the metrics are evaluated to.</p> required <code>predictions</code> <code>Predictions</code> <p>The single point predictions to which the metrics are evaluated to.</p> required <code>model_name</code> <code>Optional[str]</code> <p>The name of the model that the predictions were generated by. Used for identifying scorecards.</p> <code>None</code> <code>model_description</code> <code>str</code> <p>A description of the model that the predictions were generated by. Used for reporting.</p> <code>''</code> <code>dataset_name</code> <code>Optional[str]</code> <p>The name of the dataset from which the <code>y</code> (targets) orginate from. Used for reporting.</p> <code>None</code> <code>dataset_description</code> <code>str</code> <p>A description of the dataset from which the <code>y</code> (targets) orginate from. Used for reporting.</p> <code>''</code> <code>project_name</code> <code>Optional[str]</code> <p>The name of the project. Used for reporting and saving to a directory (eg.: multiple scorecards)</p> <code>None</code> <code>project_description</code> <code>str</code> <p>A description of the project. Used for reporting.</p> <code>''</code> <code>dataset_type</code> <code>Optional[Union[DatasetType, str]]</code> <p>Whether the task was a binar/multi-label classifiction of regression. If set to <code>None</code> it will infer from the target.</p> <code>None</code> <code>sample_type</code> <code>Union[str, SampleTypes]</code> <p>Whether we should evaluate it on insample or out of sample.</p> <pre><code>- `SampleTypes.outofsample`\n- `SampleTypes.insample`\n</code></pre> <code>outofsample</code> <code>default_metrics</code> <code>Optional[Union[List[Metric], Metric]]</code> <p>Default metrics that get evaluated. See <code>library</code>.</p> <code>None</code> <code>custom_metrics</code> <code>Optional[Union[List[Metric], Metric]]</code> <p>Custom metrics that get evaluated. If specified it will evaluate these after <code>default_metric</code> See <code>library</code>.</p> <code>None</code> <code>rolling_args</code> <code>Dict[str, Any]</code> <p>Arguments to be passed onto <code>pd.DataFrame.rolling</code>. Default:</p> <ul> <li>The window size of the rolling metric evaluation. If <code>None</code> evaluation over time will be on expanding window basis, by default <code>None</code>.</li> <li>The step size of the rolling metric evaluation, by default <code>1</code>.</li> </ul> <code>None</code> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from krisi import ScoreCard\n... y_pred, y_true = [0, 2, 1, 3], [0, 1, 2, 3]\n... sc = ScoreCard()\n... sc.evaluate(y_pred, y_true, defaults=True) # Calculate predefined metrics\n... sc[\"own_metric\"] = (y_pred - y_true).mean() # Add a metric result directly\n... sc.print()\n</code></pre>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.__setattr__","title":"__setattr__","text":"<pre><code>__setattr__(key: str, item: Any) -&gt; None\n</code></pre> <p>Defines Dictionary like behaviour and ensures that a Metric can be added as a:</p> <pre><code>- `Metric` object,\n- Dictionary,\n- Direct result (float, int or a List of float or int). Gets wrapped in a `Metric` object\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>key</code> <code>string</code> <p>The key to which the object will be assigned to.</p> required <code>item</code> <code>Dictionary, Metric, Float, Int or List of Float or Int, or pd.Series</code> <p>The result that gets stored with the key. Depending on the type of object it will result in different behaviours:</p> <pre><code>- If `Metric` or `Dict` it will store the object on `ScoreCard[key]`\n- If (`Float`, `Int`, `List of Float`, `List of Int`, `pd.Series`) it will check if a `Metric` on `key`\nalready exists on `ScoreCard`. If yes, it will assign item to the result field of the\nexisting `Metric`. If not it will wrap the item in a new `Metric` first then assign it to\n`ScoreCard[key]`.\n</code></pre> required <p>Examples:</p> <pre><code>&gt;&gt;&gt; from krisi import ScoreCard\n... sc = ScoreCard()\n... sc['metric_result'] = 0.53 # Direct result assignment as a Dictionary\nMetric(result=0.53, key='metric_result', category=None, parameters=None, info=\"\", ...)\n</code></pre> <pre><code>&gt;&gt;&gt; sc.another_metric_result = 1 # Direct object assignment\nMetric(result=1, key='another_metric_result', category=None, parameters=None, info=\"\", ...)\n</code></pre> <pre><code>&gt;&gt;&gt; from krisi.evaluate.metric import Metric\n... from krisi.evaluate.type import MetricCategories\n... sc.full_metric = Metric(\"My own metric\", category=MetricCategories.class_err, info=\"A fictious metric with metadata\", func: lambda y, y_hat: (y - y_hat)/2)\nMetric(\"My own metric\", key=\"my_own_metric\", category=MetricCategories.class_err, info=\"A fictious metric with metadata\", ...)\n</code></pre> <pre><code>&gt;&gt;&gt; sc.metric_as_dictionary = {name: \"My other metric\", info: \"A Metric created with a dictionary\", func: lambda y, y_hat: y - y_hat}\nMetric(\"My other metric\", key=\"my_other_metric\", info=\"A Metric created with a dictionary\", ...)\n</code></pre>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.evaluate","title":"evaluate","text":"<pre><code>evaluate(defaults: bool = True) -&gt; None\n</code></pre> <p>Evaluates <code>Metric</code>s present on the <code>ScoreCard</code></p> <p>Parameters:</p> Name Type Description Default <code>defaults</code> <code>bool</code> <p>Wether the default <code>Metric</code>s should be evaluated or not.</p> <code>True</code> <p>Returns:</p> Type Description <code>None</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.evaluate_benchmark","title":"evaluate_benchmark","text":"<pre><code>evaluate_benchmark(benchmark_models: List[Model], num_benchmark_iter: int, defaults: bool = True) -&gt; None\n</code></pre> <p>Evaluates <code>Metric</code>s to a benchmark on the <code>ScoreCard</code></p> <p>Parameters:</p> Name Type Description Default <code>defaults</code> <code>bool</code> <p>Wether the default <code>Metric</code>s should be evaluated or not.</p> <code>True</code> <p>Returns:</p> Type Description <code>None</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.evaluate_over_time","title":"evaluate_over_time","text":"<pre><code>evaluate_over_time(defaults: bool = True) -&gt; None\n</code></pre> <p>Evaluates <code>Metric</code>s present on the <code>ScoreCard</code> over time, either with expanding or fixed sized window. Assigns list of results to <code>results_over_time</code>.</p> <p>Parameters:</p> Name Type Description Default <code>y</code> <p>The true labels to compare values to.</p> required <code>predictions</code> <p>The predicted values. Integers or whole floats if classification, else floats.</p> required <code>defaults</code> <code>bool</code> <p>Wether the default <code>Metric</code>s should be evaluated or not. Default value = True</p> <code>True</code> <code>window</code> <p>Size of window. If number is provided then evaluation happens on a fixed window size, otherwise it evaluates it on an expanding window basis.</p> required <p>Returns:</p> Type Description <code>None</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.get_all_metrics","title":"get_all_metrics","text":"<pre><code>get_all_metrics(defaults: bool = True, only_evaluated: bool = False, spread_comparisons: bool = False) -&gt; List[Metric]\n</code></pre> <p>Helper function that returns both <code>default_metrics</code> and <code>custom_metrics</code>.</p> <p>Parameters:</p> Name Type Description Default <code>only_evaluated</code> <code>bool</code> <p>Only return <code>Metric</code>s that were already evaluated</p> <code>False</code> <code>defauls</code> <p>Whether <code>default_metrics</code> should be return or not.</p> required <p>Returns:</p> Type Description <code>List of Metrics</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.get_custom_metrics","title":"get_custom_metrics","text":"<pre><code>get_custom_metrics() -&gt; List[Metric]\n</code></pre> <p>Returns a List of Custom <code>Metric</code>s defined by the user on initalization of the <code>ScoreCard</code></p> <p>Returns:</p> Type Description <code>List of Metrics</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.get_default_metrics","title":"get_default_metrics","text":"<pre><code>get_default_metrics() -&gt; List[Metric]\n</code></pre> <p>Returns a List of Predefined Metrics according to task type: regression, classification, multi-label classification.</p> <p>Returns:</p> Type Description <code>List of Metrics</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.get_ds","title":"get_ds","text":"<pre><code>get_ds(name_as_index: bool = False) -&gt; pd.Series\n</code></pre> <p>Returns a <code>pd.Series</code> where each index is the name of a <code>Metric</code> and the value is the corresponding <code>result</code></p> <p>Returns:</p> Type Description <code>Series</code>"},{"location":"api/scorecard/#krisi.evaluate.scorecard.ScoreCard.print","title":"print","text":"<pre><code>print(mode: Union[str, PrintMode, List[PrintMode], List[str]] = PrintMode.extended, with_info: bool = False, with_parameters: bool = True, with_diagnostics: bool = False, input_analysis: bool = True, title: Optional[str] = None, frame_or_series: bool = True) -&gt; None\n</code></pre> <p>Prints the ScoreCard to the console.</p> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>Union[str, PrintMode, List[PrintMode], List[str]]</code> <ul> <li><code>PrintMode.extended</code> or <code>'extended'</code> prints the full ScoreCard, with targets, predictions, residuals, etc.</li> <li><code>PrintMode.minimal</code> or <code>'minimal'</code> prints the name and the matching result of each metric in the ScoreCard, without fancy formatting</li> <li><code>PrintMode.minimal_table</code> or <code>'minimal_table'</code> creates a table format of just the metric name and the accompanying result</li> </ul> <code>extended</code> <code>with_info</code> <code>bool</code> <p>Wether descriptions of each metrics should be printed or not</p> <code>False</code> <code>input_analysis</code> <code>bool</code> <p>Wether it should print analysis about the raw <code>targets</code> and <code>predictions</code></p> <code>True</code> <code>title</code> <code>Optional[str]</code> <p>Title of the table when mode = <code>'minimal_table'</code></p> <code>None</code>"},{"location":"api/scorecard/#krisi.evaluate.type","title":"krisi.evaluate.type","text":""},{"location":"api/scorecard/#krisi.evaluate.metric","title":"krisi.evaluate.metric","text":""},{"location":"api/scorecard/#krisi.evaluate.metric.Metric","title":"Metric  <code>dataclass</code>","text":"<p>             Bases: <code>Generic[MetricResult]</code></p> <p>Class representing a metric.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the metric.</p> required <code>key</code> <code>str</code> <p>The key used to reference the metric.</p> <code>''</code> <code>category</code> <code>Optional[MetricCategories]</code> <p>The category of the metric.</p> <code>None</code> <code>result</code> <code>Optional[Union[Exception, MetricResult, List[MetricResult]]]</code> <p>The result of the evaluated <code>Metric</code>, by default None</p> <code>None</code> <code>result_rolling</code> <code>Optional[Union[Exception, MetricResult, List[MetricResult]]]</code> <p>The result of the evaluated <code>Metric</code> over time, by default None</p> <code>None</code> <code>parameters</code> <code>dict</code> <p>The paramaters that are passed into the evaluation function (param: <code>func</code>), by default field(default_factory=dict)</p> <code>field(default_factory=dict)</code> <code>func</code> <code>Optional[MetricFunction]</code> <p>The function used to compute the metric.</p> <code>None</code> <code>plot_funcs</code> <code>Optional[Union[List[PlotDefinition], PlotDefinition]]</code> <p>List of functions used to plot the metric.</p> <code>None</code> <code>plot_funcs_rolling</code> <code>Optional[Union[List[PlotDefinition], PlotDefinition]]</code> <p>Function used to plot the rolling metric value.</p> <code>None</code> <code>info</code> <code>str</code> <p>Additional information about the metric.</p> <code>''</code> <code>restrict_to_sample</code> <code>Optional[SampleTypes]</code> <p>Weather the <code>Metric</code> should only be evaluated on insample or out of sample data, by default None</p> <code>None</code> <code>comp_complexity</code> <code>Optional[ComputationalComplexity]</code> <p>How resource intensive the calculation is, by default None</p> <code>None</code> <code>accepts_probabilities</code> <code>bool</code> <p>Whether the metric accepts probabilities as input, by default False</p> <code>False</code> <code>supports_multiclass</code> <code>bool</code> <p>Whether the metric supports multiclass classification, by default False</p> <code>False</code>"},{"location":"generated/gallery/","title":"Examples","text":""},{"location":"generated/gallery/#example-gallery","title":"Example Gallery","text":"<p> Minimal Regression </p> <p> ScoreCard as pandas DataFrame </p> <p> Start - Report to Console </p> <p> Compare Classification ScoreCards </p> <p> ScoreCard printing to console, three modes </p> <p> Figures individually opened in browser or inline in Jupyter Notebook </p> <p> Figures individually saved </p> <p> Basic Loading </p> <p> A single figure with subplots of all other figures opened in browser or inline in Jupyter Notebook </p> <p> Static, PDF report </p> <p> ScoreCard Saving </p> <p> Compare Regression ScoreCards </p> <p> Basic Loading </p> <p> Classification with multiple labels and probabilities </p> <p> Basic ScoreCard </p> <p> Quick Classification to Console </p> <p> Quick Classification to Console </p> <p> Quick Classification to Console </p> <p> Default Metric Selection </p> <p> Classification with Probabilities </p> <p> Load then generate Report </p> <p> Interactive, HTML report </p> <p> Analysing rolling correlations </p> <p> Extended ScoreCard </p> <p> Download all examples in Python source code: gallery_python.zip</p> <p> Download all examples in Jupyter notebooks: gallery_jupyter.zip</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/a_start_report_console/","title":"Start - Report to Console","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/a_start_report_console/#start-report-to-console","title":"Start - Report to Console","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nimport numpy as np\n\nfrom krisi import score\n\nprint(\n    score(\n        y=np.random.random(1000),\n        predictions=np.random.random(1000),\n    )\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: a_start_report_console.py</p> <p> Download Jupyter notebook: a_start_report_console.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/analyse_rolling_corr/","title":"Analysing rolling correlations","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/analyse_rolling_corr/#analysing-rolling-correlations","title":"Analysing rolling correlations","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom krisi.analyse import (\n    get_rolled_corr_metrics,\n    matrix_corr_over_time,\n    plot_corr_over_time,\n)\nfrom krisi.report.graph import create_save_graphs\n\ndf = pd.read_csv(\n    \"https://raw.githubusercontent.com/dream-faster/datasets/main/datasets/energy/industrial_pv_load.csv\",\n    parse_dates=[\"datetime\"],\n    index_col=\"datetime\",\n)[:1000]\n\ndf_returns = df.pct_change().fillna(0)\ndf_log_returns = pd.DataFrame(np.log(1 + df_returns))\n\nwindow = 96  # One day measurement\nstep = 1\n\nfor name, df_ in [\n    (\"raw\", df),\n    (\"returns\", df_returns),\n    (\"log_returns\", df_log_returns),\n]:\n    coor_unrolled_in_time, corr_std, corr_mean = get_rolled_corr_metrics(\n        df_, window=window, step=step\n    )\n    plot_corr_over_time(df, window, step, name=name, save_or_display=[\"display\"])\n    create_save_graphs([matrix_corr_over_time(df, window, step, threshold=0.25)[1]])\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: analyse_rolling_corr.py</p> <p> Download Jupyter notebook: analyse_rolling_corr.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_classification/","title":"Evaluate classification","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_classification/#quick-classification-to-console","title":"Quick Classification to Console","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nfrom krisi import library, score\nfrom krisi.utils.data import generate_random_classification\n\ny, preds, probs, sample_weight = generate_random_classification(\n    num_labels=2, num_samples=1000\n)\nsc = score(\n    y=y,\n    predictions=preds,\n    probabilities=probs,\n    # dataset_type=\"classification_multilabel\", # if automatic inference of dataset type fails\n    calculation=\"both\",\n    default_metrics=library.ClassificationRegistry().binary_classification_balanced_metrics,\n)\nsc.print()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_classification.py</p> <p> Download Jupyter notebook: evaluate_classification.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_classification_multilabel/","title":"Classification with multiple labels and probabilities","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_classification_multilabel/#classification-with-multiple-labels-and-probabilities","title":"Classification with multiple labels and probabilities","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nfrom krisi import library, score\nfrom krisi.utils.data import generate_random_classification\n\ny, preds, probs, sample_weight = generate_random_classification(\n    num_labels=5, num_samples=1000\n)\nscore(\n    y=y,\n    predictions=preds,\n    probabilities=probs,\n    # dataset_type=\"classification_multilabel\", # if automatic inference of dataset type fails\n    calculation=\"single\",\n    default_metrics=library.ClassificationRegistry().multiclass_classification_metrics,\n).print()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_classification_multilabel.py</p> <p> Download Jupyter notebook: evaluate_classification_multilabel.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_classification_with_probabilities/","title":"Classification with Probabilities","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_classification_with_probabilities/#classification-with-probabilities","title":"Classification with Probabilities","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nfrom krisi import score\nfrom krisi.utils.data import generate_random_classification\n\ny, preds, probs, sample_weight = generate_random_classification(\n    num_labels=2, num_samples=1000\n)\nsc = score(\n    y=y,\n    predictions=preds,\n    probabilities=probs,\n    # dataset_type=\"classification_binary_balanced\", # if automatic inference of dataset type fails\n    calculation=\"single\",\n)\nsc.print()\n\nsc = score(\n    y=y,\n    predictions=preds,\n    probabilities=probs,\n    # dataset_type=\"classification_binary_balanced\", # if automatic inference of dataset type fails\n    calculation=\"both\",\n)\nsc.print()\nsc.generate_report()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_classification_with_probabilities.py</p> <p> Download Jupyter notebook: evaluate_classification_with_probabilities.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_compare_classification/","title":"Compare Classification ScoreCards","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_compare_classification/#compare-classification-scorecards","title":"Compare Classification ScoreCards","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\nimport numpy as np\n\nfrom krisi import compare, score\n\nscorecards = [\n    score(y=np.random.randint(0, 2, 1000), predictions=np.random.randint(0, 2, 1000))\n    for _ in range(5)\n]\ncompare(\n    scorecards, sort_by=\"accuracy\", metric_keys=[\"recall_binary\", \"f_one_score_binary\"]\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_compare_classification.py</p> <p> Download Jupyter notebook: evaluate_compare_classification.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_compare_regression/","title":"Compare Regression ScoreCards","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_compare_regression/#compare-regression-scorecards","title":"Compare Regression ScoreCards","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import compare, score\n\nscorecards = [\n    score(y=np.random.rand(1000), predictions=np.random.rand(1000)) for _ in range(5)\n]\nprint(compare(scorecards, metric_keys=[\"mse\", \"mae\"]))\nprint(\n    compare(\n        scorecards,\n        metric_keys=[\"mse\", \"mae\"],\n        dataframe=False,\n    ),\n)\nprint(compare(scorecards, sort_by=\"mae\"))\nprint(compare(scorecards, [\"mse\", \"mae\"]))\nprint(compare(scorecards, [\"mae\", \"mse\"]))\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_compare_regression.py</p> <p> Download Jupyter notebook: evaluate_compare_regression.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_default_metric_selection/","title":"Default Metric Selection","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_default_metric_selection/#default-metric-selection","title":"Default Metric Selection","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import library, score\n\nscore(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    default_metrics=library.RegressionRegistry().all_regression_metrics,  # This is the default\n).print()\n\nscore(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    default_metrics=library.RegressionRegistry().minimal_regression_metrics,\n).print(input_analysis=False)\n\nscore(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    default_metrics=library.RegressionRegistry().low_computation_regression_metrics,\n).print(input_analysis=False)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_default_metric_selection.py</p> <p> Download Jupyter notebook: evaluate_default_metric_selection.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_probabilities/","title":"Quick Classification to Console","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_probabilities/#quick-classification-to-console","title":"Quick Classification to Console","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.utils.data import create_probabilities\n\nnum_labels = 3\nnum_samples = 1000\nprobabilities = create_probabilities(num_labels=num_labels, num_samples=num_samples)\n\nsc = score(\n    y=np.random.randint(0, num_labels, num_samples),\n    predictions=np.random.randint(0, num_labels, num_samples),\n    probabilities=probabilities,\n    calculation=\"both\"\n    # dataset_type=\"classification_multilabel\", # if automatic inference of dataset type fails\n)\nsc.print()\nsc.generate_report()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_probabilities.py</p> <p> Download Jupyter notebook: evaluate_probabilities.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_probabilities_binary/","title":"Evaluate probabilities binary","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_probabilities_binary/#quick-classification-to-console","title":"Quick Classification to Console","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.utils.data import create_probabilities\n\nnum_labels = 2\nnum_samples = 1000\nprobabilities = create_probabilities(num_labels=num_labels, num_samples=num_samples)\n\nsc = score(\n    y=np.random.randint(0, num_labels, num_samples),\n    predictions=np.random.randint(0, num_labels, num_samples),\n    probabilities=probabilities,\n    calculation=\"both\"\n    # dataset_type=\"classification_multilabel\", # if automatic inference of dataset type fails\n)\nsc.print()\nsc.generate_report()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_probabilities_binary.py</p> <p> Download Jupyter notebook: evaluate_probabilities_binary.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_regression/","title":"Minimal Regression","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_regression/#minimal-regression","title":"Minimal Regression","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\n\nscore(y=np.random.random(1000), predictions=np.random.random(1000)).print()\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_regression.py</p> <p> Download Jupyter notebook: evaluate_regression.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/evaluate_rolling/","title":"Evaluate rolling","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/evaluate_rolling/#basic-loading","title":"Basic Loading","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.evaluate.type import Calculation\n\ndatasize = 250\n\nscore(\n    y=np.random.rand(datasize),\n    predictions=np.random.rand(datasize),\n    calculation=Calculation.rolling,\n).print()\n\nscore(\n    y=np.random.rand(datasize),\n    predictions=np.random.rand(datasize),\n    calculation=Calculation.rolling,\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: evaluate_rolling.py</p> <p> Download Jupyter notebook: evaluate_rolling.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_direct/","title":"Figures individually opened in browser or inline in Jupyter Notebook","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_direct/#figures-individually-opened-in-browser-or-inline-in-jupyter-notebook","title":"Figures individually opened in browser or inline in Jupyter Notebook","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.report.type import DisplayModes\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    project_name=\"Example Project\",\n)\n\nsc.generate_report(\n    display_modes=[DisplayModes.direct],\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_direct.py</p> <p> Download Jupyter notebook: report_direct.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_direct_one_subplot/","title":"A single figure with subplots of all other figures opened in browser or inline in Jupyter Notebook","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_direct_one_subplot/#a-single-figure-with-subplots-of-all-other-figures-opened-in-browser-or-inline-in-jupyter-notebook","title":"A single figure with subplots of all other figures opened in browser or inline in Jupyter Notebook","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.report.type import DisplayModes\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    project_name=\"Example Project\",\n)\n\nsc.generate_report(\n    display_modes=[DisplayModes.direct_one_subplot],\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_direct_one_subplot.py</p> <p> Download Jupyter notebook: report_direct_one_subplot.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_direct_save/","title":"Figures individually saved","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_direct_save/#figures-individually-saved","title":"Figures individually saved","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.report.type import DisplayModes\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    project_name=\"Example Project\",\n)\n\nsc.generate_report(\n    display_modes=[DisplayModes.direct_save],\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_direct_save.py</p> <p> Download Jupyter notebook: report_direct_save.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_interactive/","title":"Interactive, HTML report","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_interactive/#interactive-html-report","title":"Interactive, HTML report","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport os\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.evaluate.type import Calculation\nfrom krisi.report.type import DisplayModes\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    model_name=\"ARIMA\",\n    model_description=\"You can explain main features of the project to be displayed in the report\",\n    dataset_name=\"APPLE Stocks\",\n    dataset_description=\"You can explain main features of the dataset to be displayed in the report\",\n    project_name=\"Quantitative Finance Project\",\n    project_description=\"The extra information about what the project is about will be displayed when creating a report\",\n    calculation=Calculation.rolling,\n)\n\nif \"PYTEST_CURRENT_TEST\" in os.environ:\n    print(\"Not testing Dash server currently\")\nelse:\n    sc.generate_report(\n        display_modes=[DisplayModes.interactive],\n    )\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_interactive.py</p> <p> Download Jupyter notebook: report_interactive.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_loading_generating/","title":"Load then generate Report","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_loading_generating/#load-then-generate-report","title":"Load then generate Report","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\n\nimport os\n\nimport numpy as np\n\nfrom krisi import ScoreCard\nfrom krisi.evaluate.type import PathConst\nfrom krisi.utils.io import load_scorecards\n\n\ndef create_scorecard(project_name: str) -&gt; None:\n    target, predictions = np.random.rand(100), np.random.rand(100)\n\n    sc = ScoreCard(\n        target,\n        predictions,\n        model_name=\"&lt;your_model_name&gt;\",\n        dataset_name=\"&lt;your_dataset_name&gt;\",\n        project_name=project_name,\n    )\n\n    sc.evaluate(defaults=True)\n    sc.save()\n\n\ndef load_and_generate(project_name: str) -&gt; None:\n    scorecard = load_scorecards(project_name, PathConst.default_eval_output_path)\n    scorecard[-1].generate_report()\n\n\nproject_name = \"Example Project\"\ncreate_scorecard(project_name)\n\n\nif \"PYTEST_CURRENT_TEST\" in os.environ:\n    print(\"Not testing Dash server currently\")\nelse:\n    load_and_generate(project_name)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_loading_generating.py</p> <p> Download Jupyter notebook: report_loading_generating.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/report_pdf/","title":"Static, PDF report","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/report_pdf/#static-pdf-report","title":"Static, PDF report","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.report.type import DisplayModes\n\nsc = score(\n    y=np.random.random(1000),\n    predictions=np.random.random(1000),\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    project_name=\"Example Project\",\n    calculation=\"rolling\",\n)\n\nsc.generate_report(\n    display_modes=[DisplayModes.pdf],\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: report_pdf.py</p> <p> Download Jupyter notebook: report_pdf.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_basic/","title":"Basic ScoreCard","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_basic/#basic-scorecard","title":"Basic ScoreCard","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi.evaluate import SampleTypes, ScoreCard\n\ntarget, predictions = np.random.rand(1000), np.random.rand(1000)\nsc = ScoreCard(\n    target,\n    predictions,\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    sample_type=SampleTypes.insample,\n)\n\n\"\"\" A predefined metrics \"\"\"\nsc.evaluate(defaults=True)\n\n\"\"\" Adding a new metric \"\"\"\nsc[\"own_metric\"] = (target - predictions).mean()\n\n\"\"\" Print scorecard summary \"\"\"\nsc.print(\"extended\")\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_basic.py</p> <p> Download Jupyter notebook: scorecard_basic.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_extended/","title":"Extended ScoreCard","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_extended/#extended-scorecard","title":"Extended ScoreCard","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi.evaluate import Metric, MetricCategories, SampleTypes, ScoreCard\n\ntarget, predictions = np.random.rand(100), np.random.rand(100)\n\nsc = ScoreCard(\n    y=target,\n    predictions=predictions,\n    model_name=\"&lt;your_model_name&gt;\",\n    dataset_name=\"&lt;your_dataset_name&gt;\",\n    sample_type=SampleTypes.insample,\n)\n\n\"\"\" Predefined metrics \"\"\"\nsc.evaluate(defaults=True)\n\n\"\"\" Adding a new metric \"\"\"\ncalculated_metric_example = (target - predictions).mean()\n\nsc[\"own_metric\"] = calculated_metric_example\n# or\nsc.another_metric = calculated_metric_example * 2.0\n# or\nsc[\"yet_another_metric\"] = Metric(\n    name=\"A new, own Metric\",\n    category=MetricCategories.residual,\n    result=calculated_metric_example * 3.0,\n    parameters={\"hyper_1\": 5.0},\n)\n\n# Updating a metric\nsc.yet_another_metric = dict(info=\"Giving description to a metric\")\n\n\"\"\" Print scorecard summary \"\"\"\nsc.print(\"extended\", with_info=True)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_extended.py</p> <p> Download Jupyter notebook: scorecard_extended.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_loading/","title":"Basic Loading","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_loading/#basic-loading","title":"Basic Loading","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import compare, score\nfrom krisi.evaluate.type import PathConst\nfrom krisi.utils.io import load_scorecards\n\nproject_name = \"Example Load\"\n\nfor _ in range(5):\n    score(\n        y=np.random.rand(1000),\n        predictions=np.random.rand(1000),\n        project_name=project_name,\n    ).save()\n\n\nprint(\n    compare(\n        load_scorecards(project_name, PathConst.default_eval_output_path),\n        metric_keys=[\"mse\"],\n    )\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_loading.py</p> <p> Download Jupyter notebook: scorecard_loading.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_printing_methods/","title":"ScoreCard printing to console, three modes","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_printing_methods/#scorecard-printing-to-console-three-modes","title":"ScoreCard printing to console, three modes","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\n\nscorecard = score(y=np.random.random(1000), predictions=np.random.random(1000))\n\nscorecard.print()  # Same as \"extended\"\nprint(scorecard)  # Same as \"minimal\"\nscorecard.print(\"extended\")\nscorecard.print(\"minimal\")\nscorecard.print(\"minimal_table\")\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_printing_methods.py</p> <p> Download Jupyter notebook: scorecard_printing_methods.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_saving/","title":"ScoreCard Saving","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_saving/#scorecard-saving","title":"ScoreCard Saving","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\nfrom krisi.evaluate.type import SaveModes\n\nscorecard = score(y=np.random.rand(1000), predictions=np.random.rand(1000))\nscorecard.save(\n    save_modes=[\n        SaveModes.minimal,\n        SaveModes.obj,\n        SaveModes.text,\n        SaveModes.svg,\n        SaveModes.html,\n        SaveModes.text,\n    ]  # Optional, defaults to [ SaveModes.minimal, SaveModes.obj, SaveModes.text ]\n)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_saving.py</p> <p> Download Jupyter notebook: scorecard_saving.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/gallery/scorecard_to_series/","title":"ScoreCard as pandas DataFrame","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/gallery/scorecard_to_series/#scorecard-as-pandas-dataframe","title":"ScoreCard as pandas DataFrame","text":"<pre><code># mkdocs_gallery_thumbnail_path = 'images/example_thumnail.png'\n\nimport numpy as np\n\nfrom krisi import score\n\ndf = score(y=np.random.random(1000), predictions=np.random.random(1000)).get_ds()\nprint(df)\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.000 seconds)</p> <p> Download Python source code: scorecard_to_series.py</p> <p> Download Jupyter notebook: scorecard_to_series.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"product/license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) Myalo UG (haftungsbeschr\u00e4nkt) (Mark Aron Szulyovszky, Daniel Szemerey)</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"product/license/#commons-clause-restriction-commons-clause-license-condition-v10","title":"Commons Clause Restriction -  Commons Clause License Condition v1.0","text":"<p>The Software is provided to you by the Licensor under the License, as defined below, subject to the following condition.</p> <p>Without limiting other conditions in the License, the grant of rights under the License will not include, and the License does not grant to you, the right to Sell the Software.</p> <p>For purposes of the foregoing, \u201cSell\u201d means practicing any or all of the rights granted to you under the License to provide to third parties, for a fee or other consideration (including without limitation fees for hosting or consulting/ support services related to the Software), a product or service whose value derives, entirely or substantially, from the functionality of the Software. Any license notice or attribution required by the License must also include this Commons Clause License Condition notice.</p> <p>Software: krisi (https://www.github.com/dream-faster/krisi)</p> <p>License: MIT License with Commons Clause</p> <p>Licensor: Myalo UG (haftungsbeschr\u00e4nkt), Berlin, Germany</p>"},{"location":"walkthroughs/a_full_rundown_notebook/","title":"<code>Krisi</code> Quick Intro Notebook","text":"<p>Welcome to Krisi! This notebook helps you get onboard with the core functionality of <code>Krisi</code>.</p> <p>By the end you will be able to: * evaluate your Time-Series predictions,  * save the results and  * generate a report. * comparing multiple scorecards.</p>"},{"location":"walkthroughs/a_full_rundown_notebook/#evaluating-the-results-of-a-single-scorecard","title":"Evaluating the results of a single ScoreCard","text":""},{"location":"walkthroughs/a_full_rundown_notebook/#first-lets-import-the-needed-libraries","title":"First, let's import the needed libraries:","text":"<pre><code>import numpy as np\nfrom krisi import score\nimport plotly.io as pio\npio.renderers.default = \"png\"\n</code></pre>"},{"location":"walkthroughs/a_full_rundown_notebook/#generate-normally-distributed-synthetic-data-for-demonstration-purposes","title":"Generate normally distributed synthetic data for demonstration purposes","text":"<pre><code>y=np.random.random(1000) # Targets\npredictions=np.random.random(1000) # Artifical predictions\n</code></pre>"},{"location":"walkthroughs/a_full_rundown_notebook/#use-the-score-helper-function-to-evaluate-your-results","title":"Use the <code>score</code> helper function to evaluate your results","text":"<p><code>score</code> simply wraps <code>ScoreCard</code> initalization and <code>ScoreCard.evaluate()</code> .</p> <pre><code>scorecard = score(y, predictions)\n</code></pre> <p>The ScoreCard object is the main engine of <code>krisi</code>. It stores the <code>targets</code> and <code>predictions</code>, the metrics that we have specified (default metrics and custom metrics) and useful optional metadata, such as <code>model_name</code>, <code>dataset_description</code>, etc.</p> <p>Once we have the ScoreCard evaluated, we can generate various reports with it.</p> <pre><code>''' Printing a minimal result by passing in `minimal` '''\nscorecard.print('minimal')\n</code></pre> Model_20230505-1556230b8c065c Mean Absolute Error 0.110889 Mean Absolute Percentage Error 7.385812 Symmetric Mean Absolute Percentage Error 0.711206 Mean Squared Error 0.019479 Root Mean Squared Error 0.139567 R-squared -0.948928 Mean of the Residuals 0.002519 Standard Deviation of the Residuals 0.139614 <pre><code>''' Printing a more detailed result by passing in `extended` (this is the default) '''\nscorecard.print('extended')\n</code></pre> <pre>\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501 Result of Model_20230505-1556230b8c065c on Dataset_20230505-155623dd06a4a6 tested on outofsample \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503                                                                                                                 \u2503\n\u2503                                        Targets and Predictions Analysis                                         \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502        Series Type \u2502 Histogram                                                \u2502        Types \u2502     Indicies \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502            Targets \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      NaNs: 0 \u2502     Start: 0 \u2502 \u2503\n\u2503 \u2502                    \u2502 76.0\u2524                     \u2588\u2588\u2588                          \u2502 \u2502       dtype: \u2502     End: 999 \u2502 \u2503\n\u2503 \u2502                    \u2502 63.3\u2524                  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                     \u2502 \u2502      float64 \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 50.7\u2524                \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                  \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 38.0\u2524              \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 25.3\u2524              \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588              \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 12.7\u2524         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588          \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502  0.0\u2524\u2588 \u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502    -0.35       -0.17        0.01        0.19       0.37  \u2502              \u2502              \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502        Predictions \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      NaNs: 0 \u2502     Start: 0 \u2502 \u2503\n\u2503 \u2502                    \u2502 85.0\u2524                            \u2588\u2588                    \u2502 \u2502       dtype: \u2502     End: 999 \u2502 \u2503\n\u2503 \u2502                    \u2502 70.8\u2524                         \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588               \u2502 \u2502      float64 \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 56.7\u2524                         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588               \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 42.5\u2524                     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588          \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 28.3\u2524                    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502 14.2\u2524                \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588    \u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502  0.0\u2524\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2502 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502     \u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2518 \u2502              \u2502              \u2502 \u2503\n\u2503 \u2502                    \u2502    -0.43       -0.25        -0.07       0.11       0.29  \u2502              \u2502              \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                              Residual Diagnostics                                               \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502             Metric Name \u2502 Result                                                   \u2502 Parameters             \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Residuals (residuals) \u2502 0     -0.039898                                          \u2502 {}                     \u2502 \u2503\n\u2503 \u2502                         \u2502 1     -0.115117                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 2     -0.030332                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 3     -0.047416                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 4      0.008044                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502          ...                                             \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 995   -0.016276                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 996   -0.071913                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 997    0.095479                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 998   -0.161347                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 999   -0.319740                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 Length: 1000, dtype: float64                             \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502    Ljung Box Statistics \u2502       lb_stat  lb_pvalue                                 \u2502 {}                     \u2502 \u2503\n\u2503 \u2502  (ljung_box_statistics) \u2502 1    0.142215   0.706089                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 2    5.292416   0.070920                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 3    8.308879   0.040041                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 4    8.320772   0.080510                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 5    9.975219   0.075940                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 6   10.487945   0.105551                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 7   10.488062   0.162561                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 8   12.309038   0.137939                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 9   12.439323   0.189660                                 \u2502                        \u2502 \u2503\n\u2503 \u2502                         \u2502 10  15.259462   0.122885                                 \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Mean of the Residuals \u2502 0.003                                                    \u2502 {}                     \u2502 \u2503\n\u2503 \u2502        (residuals_mean) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Standard Deviation of \u2502 0.14                                                     \u2502 {}                     \u2502 \u2503\n\u2503 \u2502           the Residuals \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u2502         (residuals_std) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                          Forecast Errors - Regression                                           \u2503\n\u2503 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2503\n\u2503 \u2502     Mean Absolute Error \u2502 0.111                                                    \u2502 {}                     \u2502 \u2503\n\u2503 \u2502                   (mae) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502           Mean Absolute \u2502 7.386                                                    \u2502 {}                     \u2502 \u2503\n\u2503 \u2502 Percentage Error (mape) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502 Symmetric Mean Absolute \u2502 0.711                                                    \u2502 {}                     \u2502 \u2503\n\u2503 \u2502        Percentage Error \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u2502                 (smape) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502      Mean Squared Error \u2502 0.019                                                    \u2502 {'squared': True}      \u2502 \u2503\n\u2503 \u2502                   (mse) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502 Root Mean Squared Error \u2502 0.14                                                     \u2502 {'squared': False}     \u2502 \u2503\n\u2503 \u2502                  (rmse) \u2502                                                          \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502   Root Mean Squared Log \u2502 'Mean Squared Logarithmic Error cannot be used when      \u2502 {'squared': False}     \u2502 \u2503\n\u2503 \u2502           Error (rmsle) \u2502 targets contain negative values.'                        \u2502                        \u2502 \u2503\n\u2503 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2503\n\u2503 \u2502       R-squared (r_two) \u2502 -0.949                                                   \u2502 {}                     \u2502 \u2503\n\u2503 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2503\n\u2503                                                                                                                 \u2503\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\n</pre> <p>In jupyter notebook you can return the object and get a minimal report and the console representation printed (for exploring while debugging)</p> <pre><code>scorecard\n</code></pre> Model_20230505-1556230b8c065c Mean Absolute Error 0.110889 Mean Absolute Percentage Error 7.385812 Symmetric Mean Absolute Percentage Error 0.711206 Mean Squared Error 0.019479 Root Mean Squared Error 0.139567 R-squared -0.948928 Mean of the Residuals 0.002519 Standard Deviation of the Residuals 0.139614 <pre><code>&lt;krisi.evaluate.scorecard.ScoreCard object at 0x29c6a4670&gt;\n</code></pre>"},{"location":"walkthroughs/a_full_rundown_notebook/#evaluating-on-a-rolling-basis","title":"Evaluating on a rolling basis","text":"<p>The most important feature of <code>krisi</code> is that you can evaluate metrics over time.</p> <pre><code>scorecard_rolling = score(y, predictions, calculation='rolling') # calculation can be 'rolling', 'single' or 'both'\n</code></pre> <pre><code>/Users/daniel/mambaforge/envs/krisitest/lib/python3.10/site-packages/sklearn/metrics/_regression.py:918: UndefinedMetricWarning:\n\nR^2 score is not well-defined with less than two samples.\n</code></pre> <p>We can then generate an <code>interactive</code> (html dash) and <code>pdf</code> report, but first let's save the scorecard!</p>"},{"location":"walkthroughs/a_full_rundown_notebook/#save-and-load-scorecards","title":"Save and load ScoreCards","text":"<p>When saving a scorecard we can decide if we also want to save the console output, by specifying <code>save_modes</code>. Options are:     * <code>SaveModes.minimal</code> (Minimal output as previously in the cell)    * <code>SaveModes.obj</code> (Saves the entire object to a pickle file)    * <code>SaveModes.text</code> (Saves the output of the console into a <code>txt</code> file)    * <code>SaveModes.svg</code> (Creates an <code>svg</code> image of the console output)    * <code>SaveModes.html</code> (Creates an <code>html</code> version of the console output)</p> <p>Let's just save the scorecard object that we can load in later, by passing in either <code>[SaveMode.obj]</code> or simply <code>[\"obj\"]</code>.</p> <p>Two things to note: * The scorecard gets saved by default to <code>output/&lt;project_name&gt;/&lt;scorecards&gt;/&lt;current_time&gt;</code>. However, we only need to worry about the <code>project_name</code> when loading, our helper function scans the directory of the specified project. * <code>ScoreCard.save()</code> throws back itself, so that you can immediately chain a <code>print()</code></p> <pre><code>scorecard.metadata.project_name = \"Our example project\"\nscorecard.save(save_modes=[\"obj\"]).print('minimal')\n</code></pre> <pre></pre> Model_20230505-1556230b8c065c Mean Absolute Error 0.110889 Mean Absolute Percentage Error 7.385812 Symmetric Mean Absolute Percentage Error 0.711206 Mean Squared Error 0.019479 Root Mean Squared Error 0.139567 R-squared -0.948928 Mean of the Residuals 0.002519 Standard Deviation of the Residuals 0.139614 <p>Once we have saved the object we can load it in. <code>load_scorecards</code> loads in all <code>scorecards</code> from a project</p>"},{"location":"walkthroughs/a_full_rundown_notebook/#compare-multiple-scorecards","title":"Compare multiple scorecards","text":"<pre><code>from krisi import compare\n\ncompare([score(np.random.random(1000), np.random.random(1000)) for _ in range(5)], sort_by='rmse', metric_keys=['mae', 'mse'])\n</code></pre> rmse mae mse Model_20230505-155623f4dca2dc 0.141890 0.111921 0.020133 Model_20230505-155623091dd4f4 0.140953 0.113679 0.019868 Model_20230505-155623d050bca6 0.140538 0.112274 0.019751 Model_20230505-155623b6186a6d 0.140259 0.112374 0.019673 Model_20230505-1556234df3034c 0.138824 0.111550 0.019272 <pre><code>from krisi import load_scorecards\n\nlast_scorecard = load_scorecards(\"Our example project\")[-1]\n</code></pre> <p>You can also save scorecards and load them in. <code>krisi</code> will save and load from the directory under the same <code>project_name</code> so we should specify the name.</p> <pre><code>project_name = \"Comparing Multiple Scorecards\"\n\nfor i in range(5):\n    score(np.random.random(1000), \n          np.random.random(1000), \n          project_name=project_name).save()\n\ncompare(load_scorecards(project_name), sort_by='rmse', metric_keys=['mae', 'mse'])\n</code></pre> <pre></pre> <pre></pre> <pre></pre> <pre></pre> <pre></pre> rmse mae mse Model_20230505-1556239fd52082 0.145031 0.114443 0.021034 Model_20230505-15562381bcb4bc 0.144074 0.113683 0.020757 Model_20230505-155623b6723ba4 0.142404 0.113606 0.020279 Model_20230505-155623bcce900c 0.140336 0.112343 0.019694 Model_20230505-155623a79f49e0 0.140335 0.111867 0.019694"},{"location":"walkthroughs/a_full_rundown_notebook/#creating-reports","title":"Creating Reports","text":"<p>For reporting you need to install <code>krisi[plotting]</code>: <code>pip install krisi[plotting]</code></p> <p>There are five modes for reports:    * <code>DisplayMode.pdf</code> or <code>pdf</code>: Creates a pdf report from the evaluated <code>ScoreCard</code>)    * <code>DisplayMode.interactive</code> or <code>interactive</code>: Creates an interactive web version of the <code>ScoreCard</code> with <code>Dash</code>)    * <code>DisplayMode.direct</code> or <code>direct</code>: Displays the plots individually directly in the notebook or webpage if launch outside of a notebook    * <code>DisplayMode.direct_save</code> or <code>direct_save</code>:  Saves the plots individually    * <code>DisplayMode.direct_one_subplot</code> or <code>direct_one_subplot</code>: Same as <code>direct</code>, except all plots are contained in one plot as subplots.</p> <p><code>scorecard.generate_report()</code> can receive a list of <code>DisplayModes</code> so you can mix and match the view (eg.: generate a pdf and also launch an interactive exploration)</p> <p>For saved files look in <code>output/&lt;project_name&gt;</code> for saved plots look in <code>output/&lt;project_name&gt;/diagrams</code></p> <pre><code>scorecard_rolling = score(np.random.random(1000), np.random.random(1000), calculation='single')\n</code></pre> <pre><code>/Users/daniel/mambaforge/envs/krisitest/lib/python3.10/site-packages/sklearn/metrics/_regression.py:918: UndefinedMetricWarning:\n\nR^2 score is not well-defined with less than two samples.\n</code></pre> <pre><code> # We can slice the scorecard to only include the metrics we want to display\nscorecard_rolling[['rmse', 'mse']].generate_report('direct_one_subplot')\n</code></pre> <p></p> <pre><code>scorecard_rolling.generate_report(['direct_save', 'pdf'])\n</code></pre> <pre><code># scorecard_rolling.generate_report('interactive')\n</code></pre>"}]}